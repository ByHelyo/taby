[1mdiff --git a/src/background/handler/handle.ts b/src/background/handler/handle.ts[m
[1mindex bc30491..44b1fb1 100644[m
[1m--- a/src/background/handler/handle.ts[m
[1m+++ b/src/background/handler/handle.ts[m
[36m@@ -1,3 +1,5 @@[m
[31m-export const handleChangeTab = function (tab: any) {[m
[32m+[m[32mimport { Tab } from "../../types/misc.ts";[m
[32m+[m
[32m+[m[32mexport const handleChangeTab = function (tab: Tab) {[m
   chrome.tabs.update(tab.id, { active: true });[m
 };[m
[1mdiff --git a/src/scripts/menu/dom/menuDOM.ts b/src/scripts/menu/dom/menuDOM.ts[m
[1mindex 12700fc..b167720 100644[m
[1m--- a/src/scripts/menu/dom/menuDOM.ts[m
[1m+++ b/src/scripts/menu/dom/menuDOM.ts[m
[36m@@ -5,6 +5,7 @@[m [mimport {[m
   buildSearchItem,[m
   buildSearchList,[m
 } from "./build";[m
[32m+[m[32mimport { Tab } from "../../../types/misc.ts";[m
 [m
 export class MenuDOM {[m
   menu: HTMLDivElement;[m
[36m@@ -34,7 +35,13 @@[m [mexport class MenuDOM {[m
     this.searchList.innerHTML = "";[m
   }[m
 [m
[31m-  addSearchList(index: number, title: string, url: string) {[m
[32m+[m[32m  addSearchItems(tabs: Tab[]) {[m
[32m+[m[32m    tabs.forEach((tab: Tab) => {[m
[32m+[m[32m      this.addSearchItem(tab.index, tab.title, tab.url);[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  addSearchItem(index: number, title: string, url: string) {[m
     this.searchList.appendChild(buildSearchItem(index, title, url));[m
   }[m
 [m
[36m@@ -46,7 +53,7 @@[m [mexport class MenuDOM {[m
     return this.menu.contains(elt);[m
   }[m
 [m
[31m-  onInput(callback: () => void) {[m
[32m+[m[32m  onInput(callback: (event: Event) => void) {[m
     this.searchInput.addEventListener("input", callback);[m
   }[m
 [m
[1mdiff --git a/src/scripts/menu/menu.ts b/src/scripts/menu/menu.ts[m
[1mindex 2e95eb0..11c429e 100644[m
[1m--- a/src/scripts/menu/menu.ts[m
[1m+++ b/src/scripts/menu/menu.ts[m
[36m@@ -1,6 +1,10 @@[m
 import Fuse from "fuse.js";[m
[31m-import {MenuDOM} from "./dom/menuDOM";[m
[31m-import {MessageFromScript, MessageFromScriptType, Tab} from "../../types/misc.ts";[m
[32m+[m[32mimport { MenuDOM } from "./dom/menuDOM";[m
[32m+[m[32mimport {[m
[32m+[m[32m  MessageFromScript,[m
[32m+[m[32m  MessageFromScriptType,[m
[32m+[m[32m  Tab,[m
[32m+[m[32m} from "../../types/misc.ts";[m
 [m
 export class Menu {[m
   selectedTab: Tab | null;[m
[36m@@ -13,32 +17,24 @@[m [mexport class Menu {[m
     this.tabs = [];[m
     this.display = false;[m
     this.dom = new MenuDOM();[m
[31m-    this.dom.onInput(() => this.handleSearchBar(this.dom.searchInput.value));[m
[31m-    this.dom.onKeyDown((e) => {[m
[31m-      const selectedTab = this.getSelectedTab();[m
[31m-[m
[31m-      switch (e.key) {[m
[31m-        case "Enter":[m
[31m-          if (selectedTab !== null) {[m
[31m-            const message: MessageFromScript = {[m
[31m-              type: MessageFromScriptType.CHANGE_TAB,[m
[31m-              tab: selectedTab[m
[31m-            }[m
[31m-[m
[31m-            chrome.runtime.sendMessage(message);[m
[31m-          }[m
[31m-          this.closeMenu(); /* Close menu */[m
[31m-          break;[m
[31m-        case "Escape":[m
[31m-          this.closeMenu(); /* Close menu */[m
[31m-          break;[m
[31m-      }[m
[31m-    });[m
[32m+[m[32m    this.dom.onInput((e) => this.handleOnInput(e));[m
[32m+[m[32m    this.dom.onKeyDown((e) => this.handleOnKeyDown(e));[m
   }[m
 [m
[31m-  closeMenu() {[m
[31m-    this.dom.displays(false);[m
[31m-    this.display = false;[m
[32m+[m[32m  setTabs(tabs: any) {[m
[32m+[m[32m    this.tabs = tabs;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  getSelectedTab() {[m
[32m+[m[32m    return this.selectedTab;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  setSelectedTab(tab: Tab | null) {[m
[32m+[m[32m    this.selectedTab = tab;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  isDisplayed(): boolean {[m
[32m+[m[32m    return this.display;[m
   }[m
 [m
   openMenu(tabs: Tab[]) {[m
[36m@@ -48,11 +44,41 @@[m [mexport class Menu {[m
     this.dom.displays(true);[m
     this.dom.clearSearchInput();[m
     this.dom.focusSearchInput();[m
[31m-    this.handleSearchItems(tabs);[m
[32m+[m[32m    this.dom.addSearchItems(tabs);[m
 [m
     this.display = true;[m
   }[m
 [m
[32m+[m[32m  closeMenu() {[m
[32m+[m[32m    this.dom.displays(false);[m
[32m+[m[32m    this.display = false;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  handleOnKeyDown(e: KeyboardEvent) {[m
[32m+[m[32m    const selectedTab = this.getSelectedTab();[m
[32m+[m
[32m+[m[32m    switch (e.key) {[m
[32m+[m[32m      case "Enter":[m
[32m+[m[32m        if (selectedTab !== null) {[m
[32m+[m[32m          const message: MessageFromScript = {[m
[32m+[m[32m            type: MessageFromScriptType.CHANGE_TAB,[m
[32m+[m[32m            tab: selectedTab,[m
[32m+[m[32m          };[m
[32m+[m
[32m+[m[32m          chrome.runtime.sendMessage(message);[m
[32m+[m[32m        }[m
[32m+[m[32m        this.closeMenu(); /* Close menu */[m
[32m+[m[32m        break;[m
[32m+[m[32m      case "Escape":[m
[32m+[m[32m        this.closeMenu(); /* Close menu */[m
[32m+[m[32m        break;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  handleOnInput(e: Event) {[m
[32m+[m[32m    this.handleSearchBar((<HTMLInputElement>e.target).value);[m
[32m+[m[32m  }[m
[32m+[m
   handleSearchBar(searchInput: string) {[m
     const options = {[m
       keys: ["title", "url", "index"],[m
[36m@@ -60,13 +86,13 @@[m [mexport class Menu {[m
 [m
     if (searchInput === "") {[m
       this.setSelectedTab(this.tabs[0]);[m
[31m-      this.handleSearchItems(this.tabs);[m
[32m+[m[32m      this.dom.addSearchItems(this.tabs);[m
       return;[m
     }[m
 [m
     const fuse = new Fuse(this.tabs, options);[m
 [m
[31m-    const matched = fuse.search(searchInput).map((tab) => {[m
[32m+[m[32m    const matched: Tab[] = fuse.search(searchInput).map((tab) => {[m
       return {[m
         url: tab.item.url,[m
         title: tab.item.title,[m
[36m@@ -81,30 +107,6 @@[m [mexport class Menu {[m
       this.setSelectedTab(null);[m
     }[m
 [m
[31m-    this.handleSearchItems(matched);[m
[31m-  }[m
[31m-[m
[31m-  handleSearchItems(tabs: Tab[]) {[m
[31m-    this.dom.resetSearchList();[m
[31m-[m
[31m-    tabs.forEach((tab) => {[m
[31m-      this.dom.addSearchList(tab.index, tab.title, tab.url);[m
[31m-    });[m
[31m-  }[m
[31m-[m
[31m-  setTabs(tabs: any) {[m
[31m-    this.tabs = tabs;[m
[31m-  }[m
[31m-[m
[31m-  getSelectedTab() {[m
[31m-    return this.selectedTab;[m
[31m-  }[m
[31m-[m
[31m-  setSelectedTab(tab: Tab | null) {[m
[31m-    this.selectedTab = tab;[m
[31m-  }[m
[31m-[m
[31m-  isDisplayed(): boolean {[m
[31m-    return this.display;[m
[32m+[m[32m    this.dom.addSearchItems(matched);[m
   }[m
 }[m
