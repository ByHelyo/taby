name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    types: [opened, reopened, synchronize]

env:
  node-version: 18
  pnpm-version: 8

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm ${{ env.pnpm-version }}
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.pnpm-version }}

      - name: Setup Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Run check
        run: pnpm run check

      - name: Run lint
        run: pnpm run lint

  publish:
    if: github.ref == 'refs/heads/main'
    needs: checks
    environment:
      name: production
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup pnpm ${{ env.pnpm-version }}
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.pnpm-version }}

      - name: Setup Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}
          cache: "pnpm"

      - name: Get version
        run: echo "PACKAGE_VERSION=$(node -p "require('./public/manifest.json').version")" >> $GITHUB_ENV

      - name: Install dependencies
        run: pnpm install

      - name: Build for chrome
        run: pnpm run build:chrome

      - name: Zip for chrome
        run: zip -r taby.zip dist

      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          files: taby.zip
          tag_name: ${{ env.PACKAGE_VERSION }}
          body: "Take a look at the assets to download and install this app."
          draft: false
          prerelease: false

      - name: Publish to chrome web store
        run: pnpm run publish:chrome
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          CLIENT_REFRESH: ${{ secrets.REFRESH_TOKEN }}
          EXTENSION_ID: ${{ secrets.EXTENSION_ID }}

      - name: Build for firefox
        run: pnpm run build:firefox

      - name: move to dist/
        run: cd dist/

      - name: Publish to firefox
        run: pnpm run publish:firefox
        env:
          WEB_EXT_API_KEY: ${{ secrets.JWT_ISSUER }}
          WEB_EXT_API_SECRET: ${{ secrets.JWT_SECRET }}
          WEB_EXT_ID: ${{ secrets.WEB_EXT_ID }}
